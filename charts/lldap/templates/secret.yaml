apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lldap.fullname" . }}-credentials
  labels:
    {{- include "lldap.labels" . | nindent 4 }}
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  {{- /* retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result */}}
  {{- $secretName := printf "%s-%s" (include "lldap.fullname" .) "credentials" }}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- /* set $jwtSecret to existing secret data or generate a random one when not exists */}}
  {{- $jwtSecret := (get $secretData "jwt-secret") | default (randAlphaNum 32 | b64enc) }}
  jwt-secret: {{ $jwtSecret | quote }}
  {{- $adminPass := (get $secretData "admin-pass") | default (randAlphaNum 10 | b64enc) }}
  admin-pass: {{ $adminPass | quote }}